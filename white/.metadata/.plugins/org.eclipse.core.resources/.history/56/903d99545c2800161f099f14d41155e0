package jp.asojuku.testmanagement.bo;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.naming.NamingException;

import jp.asojuku.testmanagement.dto.LogonInfoDTO;
import jp.asojuku.testmanagement.dto.MemberInfoDto;
import jp.asojuku.testmanagement.entity.ManageEntity;
import jp.asojuku.testmanagement.entity.StudentEntity;
import jp.asojuku.testmanagement.exception.SystemErrorExcepton;
import jp.asojuku.testmanagement.model.Dbcontrol;

public class LoginBo {
	
	
	private static final String STUDENT_INFO_BY_UP_SQL =
				"SELECT * FROM member_tbl WHERE "+StudentEntity.STUDENT_MAIL+"=? AND "+StudentEntity.STUDENT_PASS+"=?";
	private static final String MANAGE_INFO_BY_UP_SQL =
			"SELECT * FROM member_tbl WHERE "+ManageEntity.MANAGE_MAIL+"=? AND "+ManageEntity.MANAGE_PASS+"=?";
	private static final int STUDENT_INFO_BY_UP_NAME_IDX = 1;
	private static final int STUDENT_INFO_BY_UP_PASS_IDX = 2;
	private static final int MANAGE_INFO_BY_UP_NAME_IDX = 1;
	private static final int MANAGE_INFO_BY_UP_PASS_IDX = 2;
	
	public StudentEntity getMemberInfoByUserPassword(String userName,String password) throws SQLException, SystemErrorExcepton{

		PreparedStatement ps = null;
		ResultSet rs = null;
		StudentEntity entity = null;
		Dbcontrol db = new Dbcontrol();
		LogonInfoDTO memberinfo;
        try {
        	
        	db.connect();
        	
			db.prepareStatement(STUDENT_INFO_BY_UP_SQL);

	        db.setString(STUDENT_INFO_BY_UP_NAME_IDX, userName);
	        db.setString(STUDENT_INFO_BY_UP_PASS_IDX, password);

	        rs = db.executeQuery();
	       
	        while(rs.next()){
	        	entity = new StudentEntity();
	           
	        	
	        	entity.setStudentMail(rs.getString(StudentEntity.STUDENT_MAIL));
	        	

	        }
	        
	        memberinfo = 
		} catch (SQLException e) {
		
			throw new SystemErrorExcepton();

		} catch (NamingException e) {
			
			e.printStackTrace();
			throw new SystemErrorExcepton();
		} finally {

	        // 接続を閉じる
        	if( rs != null ){
				rs.close();
        	}
        	if( ps != null ){
	        	ps.close();
        	}
        	
    		db.close();
		}
		return entity;
	}
	public LogonInfoDTO entityChageDto(StudentEntity entity){
		LogonInfoDTO memberinfo = new LogonInfoDTO();
		memberinfo.setName( entity.getStudentMail() );
		return memberinfo;
	}
}
